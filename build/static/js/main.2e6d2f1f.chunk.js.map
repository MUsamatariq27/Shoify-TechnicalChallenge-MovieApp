{"version":3,"sources":["logo-shopify.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","query","setQuery","nominations","setnom","count","setCount","loadRef","setLoad","localStorage","getItem","setItem","JSON","stringify","c","parse","nList","getNomListFromLS","window","onbeforeunload","res","title","search","movies","setMovies","getMovies","e","a","preventDefault","url","fetch","resp","json","data","Response","Search","movieExists","id","length","i","imdbID","className","class","src","logo","alt","onSubmit","type","placeholder","name","onChange","target","value","text","map","movie","Poster","Title","Year","onClick","m","arr","push","console","log","addMov","disabled","n","splice","ReMov","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e6d2f1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-shopify.4f1db4a0.jpg\";","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo-shopify.jpg\";\n\n\nconst App = () => {\n \n  const [query, setQuery] = useState(\"\");\n  const [nominations, setnom] = useState([]);\n  const [count, setCount] = useState(0);\n\n  const[loadRef, setLoad] = useState(true); \n\n  //getting nomination list from local storage\n  if (loadRef === true)\n  {\n    const getNomListFromLS = () => {\n\n      if (localStorage.getItem(\"count\") === null){\n        localStorage.setItem(\"count\", JSON.stringify(0));\n        localStorage.setItem(\"nominations\", JSON.stringify([]));\n      }\n      else{\n\n        let c = JSON.parse(localStorage.getItem(\"count\", JSON.stringify(count)));\n        setCount(c);\n\n        let nList = JSON.parse (localStorage.getItem(\"nominations\", JSON.stringify(nominations)));\n        setnom(nList);\n      }\n      setLoad(false);\n      return;\n    }\n    getNomListFromLS();\n  }\n\n  //saving data to local storage\n\n  window.onbeforeunload = function (){\n\n    localStorage.setItem(\"count\", JSON.stringify(count));\n    localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n\n  }\n\n\n\n  const [movies, setMovies] =  \n    useState({ res: null,\n      title: null,\n      search: null\n    });\n    \n    //fetching movies from the api\n    const getMovies  = async(e) => {\n    \n    e.preventDefault();\n\n    if (query !== \"\")\n    {\n      const url = `http://www.omdbapi.com/?s=${query}&apikey=f432b1e3&`;\n      const resp = await fetch(url);\n      const data = await resp.json();\n\n     \n      if (data.Response === \"False\")\n      {\n       setMovies({res: false, title: query});\n      }\n      else\n      {\n        setMovies({res: true, title: query, search: data.Search });\n      }\n    }\n      \n  }\n\n  //checking if a movie is already in the nomination list \n  const movieExists = (id) =>\n  {\n    if (nominations.length > 0)\n    {\n      for (let i=0; i<nominations.length; i++ )\n      {\n        if (nominations[i].imdbID === id)\n        {\n          return true;\n        }\n\n      }\n    }\n    return false;\n  }\n\n  //adding movie to the nomination list\n  const addMov = (movie, e) =>{\n      e.preventDefault();\n      const m = {\n        imdbID: movie.imdbID,\n        Title: movie.Title,\n        Year: movie.Year,\n        Poster: movie.Poster\n      };\n\n      let arr = nominations;\n      arr.push(m);\n      setnom(arr);\n      console.log(nominations);\n  }\n\n  //removing a movie from the nomination list\n  const ReMov = (movie, e) =>{\n    e.preventDefault();\n\n    for (let i=0; i<nominations.length; i++ )\n    {\n      if (nominations[i].imdbID === movie.imdbID)\n      {\n        nominations.splice(i, 1);\n        return;\n      }\n\n    }\n    \n  }\n\n  return (\n\n    <div className=\"App-back\">\n\n      {\n        count === 5 ? \n        \n        <div className=\"ban\">Your Nomination List is Full!</div>\n        \n        : \n        <></>\n      }\n    \n\n      <div className=\"App\">\n\n        <div className=\"NameHeader\" >\n\n          <div className=\"AppName\">\n            <div class=\"nameText\">The Shoppies</div>\n          </div>\n          <img className=\"shopLogo\" src={logo} alt=\"Shopify Logo\"/>\n\n        </div>\n\n        <form className=\"searchForm\" onSubmit={getMovies} >\n\n          <input type=\"text\" placeholder=\"Search Movie Title\" className=\"searchBar\" name=\"movie\"\n          \n          onChange={ e => setQuery(e.target.value) } />\n          <input className=\"btnS\" type=\"submit\" text=\"search\"/>\n          \n        </form>\n        \n        <div className=\"sResNom\">\n          <div className=\"sRes\" >\n            { movies.res ? \n            <>\n            <div className=\"res\" >Top Results for '{movies.title}'</div>\n\n            {movies.search.map(movie => (\n\n              <div className=\"movieBox\" key = {movie.imdbID}>\n                        \n                <img className=\"poster\" src={movie.Poster} alt=\"Poster\" />\n                <div className=\"info\">\n                  <div className=\"title\"><b>Title:</b> {movie.Title}</div>\n                  <div className=\"year\"><p><b>Year:</b> {movie.Year}</p></div>\n                  <div className=\"imID\"><p><b>imdbID:</b> {movie.imdbID}</p></div>\n                  <button\n                  onClick={(e) => {addMov(movie, e); setCount(count+1)} }\n                  disabled = { movieExists(movie.imdbID) === true || count >=5  }\n                  className=\"btnS\"\n                  >Nominate</button>\n                </div>\n              </div>\n            \n            )) \n            }\n            </> : <></> }\n            { (movies.res===false) ? <div className=\"res\">Movie '{movies.title}' not found!</div> : <></> }\n          </div>\n\n          <div className=\"Nom\">\n            <div className=\"nomHead\">Your Nominations ({count})</div>\n\n            {nominations.map(n => (\n\n              <div className=\"NomiBox\" key = {n.imdbID}>\n                        \n                <img className=\"nPoster\" src={n.Poster} alt=\"Poster\"/>\n\n                <div className=\"nInfo\">\n                  <div className=\"tit\"><p><b>Title:</b> {n.Title}</p></div>\n                  <div><p><b>Year:</b> {n.Year}</p></div>\n                  <div><p><b>imdbID:</b> {n.imdbID}</p></div>\n                  <button className=\"btnN\"\n                  onClick={(e) => {ReMov(n, e); setCount(count-1)}  }\n                  >Remove</button>\n                </div>\n                \n\n              </div>\n\n              )) \n              }\n\n          </div>\n        </div>\n\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}